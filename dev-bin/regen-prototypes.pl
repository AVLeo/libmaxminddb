#!/usr/bin/env perl

use strict;
use warnings;

use FindBin qw( $Bin );
use File::Basename qw( basename dirname );

sub main {
    my $c_file = "$Bin/../src/maxminddb.c";
    my $code   = read_file($c_file);

    my $script_name = basename($0);
    my $dir         = basename($Bin);
    my $prototypes_start
        = "/* --prototypes automatically generated by $dir/$script_name - don't remove this comment */";
    my $prototypes_end
        = "/* --prototypes end - don't remove this comment-- */";

    $code =~ s{\Q$prototypes_start\E.+\Q$prototypes_end\E\n}{__PROTOTYPES__}s;

    my $prototypes = join q{}, map { $_ . ";\n" } parse_prototypes($code);
    $code
        =~ s/__PROTOTYPES__/$prototypes_start\n$prototypes$prototypes_end\n/;

    write_file( $c_file, $code );
}

{
    my %skip = map { $_ => 1 } qw( memmem );

    sub parse_prototypes {
        my $code = shift;

        my @protos = map {
            my ($name) = $_ =~ /^LOCAL\s+\w+\s+\*?(\w+)/;
            { name => $name, prototype => $_ };
        } $code =~ /^(LOCAL.+?)\n{/msg;

        return map { $_->{prototype} } grep { !$skip{ $_->{name} } } @protos;
    }
}

sub read_file {
    open my $fh, '<', $_[0] or die "Cannot read $_[0]: $!";

    return do {
        local $/;
        <$fh>;
    };
}

sub write_file {
    open my $fh, '>', $_[0] or die "Cannot write to $_[0]: $!";
    print {$fh} $_[1] or die "Cannot write to $_[0]: $!";
    close $fh or die "Cannot write to $_[0]: $!";
}

main();
